     1                                  
     2                                  ; 1.) Setup the initial board (3x3 squares)
     3                                  ; 2.) Show the current board 
     4                                  ; 3.) Check for line and exit if one is found 
     5                                  ; 4.) Wait for movement (key 1-9) and put the letter for the turn X/O
     6                                  ; 5.) Go to 2 
     7                                  
     8                                  
     9                                  org 0x0100 
    10                                  
    11                                  board: equ 0x0300
    12                                  
    13                                  start:
    14 00000000 BB0003                      mov bx, board 
    15 00000003 B90900                      mov cx, 9
    16 00000006 B031                        mov al, '1'
    17                                  
    18                                  ; Initialize board with 1, 2, 3, ... , 9
    19                                  b09:
    20 00000008 8807                        mov [bx], al 
    21 0000000A FEC0                        inc al
    22 0000000C 43                          inc bx
    23 0000000D E2F9                        loop b09
    24                                  b10:
    25 0000000F E81700                      call show_board
    26 00000012 E88A00                      call find_line
    27 00000015 E86600                      call get_movement
    28 00000018 C60758                      mov byte [bx], 'X' ; put X into square
    29 0000001B E80B00                      call show_board
    30 0000001E E87E00                      call find_line
    31 00000021 E85A00                      call get_movement
    32 00000024 C6074F                      mov byte[bx], 'O' ; put O into square 
    33 00000027 EBE6                        jmp b10
    34                                  
    35                                  show_board:
    36 00000029 BB0003                      mov bx, board 
    37 0000002C E81100                      call show_row
    38 0000002F E82B00                      call show_div
    39 00000032 BB0303                      mov bx, board + 3
    40 00000035 E80800                      call show_row
    41 00000038 E82200                      call show_div 
    42 0000003B BB0603                      mov bx, board + 6
    43 0000003E EB00                        jmp show_row
    44                                  show_row:
    45 00000040 E83500                      call show_square
    46 00000043 B07C                        mov al, 0x7c ; '|' character 
    47 00000045 E8EC00                      call display_letter
    48 00000048 E82D00                      call show_square
    49 0000004B B07C                        mov al, 0x7c 
    50 0000004D E8E400                      call display_letter
    51 00000050 E82500                      call show_square
    52                                  ; Display new line 
    53                                  show_crlf:
    54 00000053 B00D                        mov al, 0x0d 
    55 00000055 E8DC00                      call display_letter
    56 00000058 B00A                        mov al, 0x0a
    57 0000005A E9D700                      jmp display_letter
    58                                  show_div:
    59 0000005D B02D                        mov al, 0x2d 
    60 0000005F E8D200                      call display_letter
    61 00000062 B02B                        mov al, 0x2b 
    62 00000064 E8CD00                      call display_letter
    63 00000067 B02D                        mov al, 0x2d
    64 00000069 E8C800                      call display_letter
    65 0000006C B02B                        mov al, 0x2b
    66 0000006E E8C300                      call display_letter
    67 00000071 B02D                        mov al, 0x2d 
    68 00000073 E8BE00                      call display_letter
    69 00000076 EBDB                        jmp show_crlf
    70                                  show_square:
    71 00000078 8A07                        mov al, [bx]
    72 0000007A 43                          inc bx
    73 0000007B E9B600                      jmp display_letter
    74                                  get_movement:
    75 0000007E E8C700                      call read_keyboard
    76 00000081 3C1B                        cmp al, 0x1b ; check if ESC KEY pressed 
    77 00000083 0F84AB00                    je do_exit
    78 00000087 2C31                        sub al, 0x31
    79 00000089 72F3                        jc get_movement
    80 0000008B 3C09                        cmp al, 0x09
    81 0000008D 73EF                        jnc get_movement
    82 0000008F 98                          cbw 
    83 00000090 BB0003                      mov bx, board 
    84 00000093 01C3                        add bx, ax 
    85 00000095 8A07                        mov al, [bx]
    86 00000097 3C40                        cmp al, 0x40
    87 00000099 73E3                        jnc get_movement
    88 0000009B E8B5FF                      call show_crlf
    89 0000009E C3                          ret 
    90                                  find_line:
    91 0000009F A00003                      mov al, [board]
    92 000000A2 3A060103                    cmp al, [board + 1]
    93 000000A6 7506                        jne b01 
    94 000000A8 3A060203                    cmp al, [board + 2]
    95 000000AC 745E                        je won     
    96                                  b01:
    97 000000AE 3A060303                    cmp al, [board + 3]
    98 000000B2 7506                        jne b04
    99 000000B4 3A060603                    cmp al, [board + 6]
   100 000000B8 7452                        je won 
   101                                  b04:
   102 000000BA 3A060403                    cmp al, [board + 4]
   103 000000BE 7506                        jne b05
   104 000000C0 3A060803                    cmp al, [board + 8]
   105 000000C4 7446                        je won
   106                                  b05:
   107 000000C6 A00303                      mov al, [board + 3]
   108 000000C9 3A060403                    cmp al, [board + 4]
   109 000000CD 7506                        jne b02
   110 000000CF 3A060503                    cmp al, [board + 5]
   111 000000D3 7437                        je won
   112                                  b02:
   113 000000D5 3A060603                    cmp al, [board + 6]
   114 000000D9 7506                        jne b03
   115 000000DB 3A060803                    cmp al, [board + 8]
   116 000000DF 742B                        je won
   117                                  b03:
   118 000000E1 A00103                      mov al, [board + 1]
   119 000000E4 3A060403                    cmp al, [board + 4]
   120 000000E8 7506                        jne b06
   121 000000EA 3A060703                    cmp al, [board + 7]
   122 000000EE 741C                        je won
   123                                  b06:
   124 000000F0 A00203                      mov al, [board + 2]
   125 000000F3 3A060503                    cmp al, [board + 5]
   126 000000F7 7506                        jne b07
   127 000000F9 3A060803                    cmp al, [board + 8]
   128 000000FD 740D                        je won
   129                                  b07:
   130 000000FF 3A060403                    cmp al, [board + 4]
   131 00000103 7506                        jne b08
   132 00000105 3A060603                    cmp al, [board + 6]
   133 00000109 7401                        je won
   134                                  b08:
   135 0000010B C3                          ret 
   136                                  won:
   137 0000010C E82500                      call display_letter
   138 0000010F B020                        mov al, 0x20 ; SPACE
   139 00000111 E82000                      call display_letter
   140 00000114 B077                        mov al, 'w'
   141 00000116 E81B00                      call display_letter
   142 00000119 B069                        mov al, 'i'
   143 0000011B E81600                      call display_letter
   144 0000011E B06E                        mov al, 'n'
   145 00000120 E81100                      call display_letter
   146 00000123 B073                        mov al, 's'
   147 00000125 E80C00                      call display_letter
   148                                      ; new line 
   149 00000128 B00D                        mov al, 0x0d
   150 0000012A E80700                      call display_letter
   151 0000012D B00A                        mov al, 0x0a 
   152 0000012F E80200                      call display_letter
   153                                  do_exit:
   154 00000132 CD20                        int 0x20
   155                                  
   156                                  display_letter:
   157 00000134 50                          push ax
   158 00000135 53                          push bx
   159 00000136 51                          push cx
   160 00000137 52                          push dx 
   161 00000138 56                          push si
   162 00000139 57                          push di 
   163 0000013A B40E                        mov  ah, 0x0e    ; Load AH with code for terminal output 
   164 0000013C BB0F00                      mov  bx, 0x000f  ; Load BH page zero and BL color (graphic mode)
   165 0000013F CD10                        int  0x10        ; Call BIOS for displaying one letter 
   166 00000141 5F                          pop di 
   167 00000142 5E                          pop si
   168 00000143 5A                          pop dx
   169 00000144 59                          pop cx
   170 00000145 5B                          pop bx
   171 00000146 58                          pop ax
   172 00000147 C3                          ret             ; Return to caller
   173                                  
   174                                  read_keyboard:
   175 00000148 53                          push bx
   176 00000149 51                          push cx
   177 0000014A 52                          push dx 
   178 0000014B 56                          push si
   179 0000014C 57                          push di 
   180 0000014D B400                        mov  ah, 0x00   ; Load Ah with code for keyboard read 
   181 0000014F CD16                        int  0x16       ; Call the BIOS for reading keyboard
   182 00000151 5F                          pop di
   183 00000152 5E                          pop si 
   184 00000153 5A                          pop dx 
   185 00000154 59                          pop cx 
   186 00000155 5B                          pop bx 
   187 00000156 C3                          ret             ; Return to caller 
